// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"
)

// IAlgorithm is an autogenerated mock type for the IAlgorithm type
type IAlgorithm struct {
	mock.Mock
}

// GetID provides a mock function with given fields:
func (_m *IAlgorithm) GetID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// RunSimulation provides a mock function with given fields: opType, data
func (_m *IAlgorithm) RunSimulation(opType string, data []byte) (int, error) {
	ret := _m.Called(opType, data)

	var r0 int
	if rf, ok := ret.Get(0).(func(string, []byte) int); ok {
		r0 = rf(opType, data)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []byte) error); ok {
		r1 = rf(opType, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UploadModel provides a mock function with given fields: modelFile, modelHeader
func (_m *IAlgorithm) UploadModel(modelFile multipart.File, modelHeader *multipart.FileHeader) error {
	ret := _m.Called(modelFile, modelHeader)

	var r0 error
	if rf, ok := ret.Get(0).(func(multipart.File, *multipart.FileHeader) error); ok {
		r0 = rf(modelFile, modelHeader)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
